{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B \\u0437\\u0434\\u0435\\u0441\\u044C\\\\My works\\\\Reactive Notes\\\\reactive-notes\\\\src\\\\context\\\\ThemeContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [theme, setTheme] = useState(() => {\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme || 'system';\n  });\n\n  // Определяем актуальную тему (если выбрана системная - берем системные настройки)\n  const actualTheme = theme === 'system' ? window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light' : theme;\n\n  // Применяем тему к документу\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', actualTheme);\n    localStorage.setItem('theme', theme);\n  }, [theme, actualTheme]);\n\n  // Следим за изменением системной темы\n  useEffect(() => {\n    if (theme !== 'system') return;\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = () => {\n      document.documentElement.setAttribute('data-theme', mediaQuery.matches ? 'dark' : 'light');\n    };\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      setTheme,\n      actualTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"ef46p04bKTqFiOsrhHE3CnYOzBg=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","ThemeProvider","children","_s2","theme","setTheme","savedTheme","localStorage","getItem","actualTheme","window","matchMedia","matches","document","documentElement","setAttribute","setItem","mediaQuery","handleChange","addEventListener","removeEventListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Рабочий стол/Рабочий стол здесь/My works/Reactive Notes/reactive-notes/src/context/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(() => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    return savedTheme || 'system';\r\n  });\r\n\r\n  // Определяем актуальную тему (если выбрана системная - берем системные настройки)\r\n  const actualTheme = theme === 'system' \r\n    ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light')\r\n    : theme;\r\n\r\n  // Применяем тему к документу\r\n  useEffect(() => {\r\n    document.documentElement.setAttribute('data-theme', actualTheme);\r\n    localStorage.setItem('theme', theme);\r\n  }, [theme, actualTheme]);\r\n\r\n  // Следим за изменением системной темы\r\n  useEffect(() => {\r\n    if (theme !== 'system') return;\r\n    \r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    const handleChange = () => {\r\n      document.documentElement.setAttribute('data-theme', \r\n        mediaQuery.matches ? 'dark' : 'light');\r\n    };\r\n    \r\n    mediaQuery.addEventListener('change', handleChange);\r\n    return () => mediaQuery.removeEventListener('change', handleChange);\r\n  }, [theme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, setTheme, actualTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,YAAY,CAAC;AAAA;AAACE,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,MAAM;IACvC,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,OAAOF,UAAU,IAAI,QAAQ;EAC/B,CAAC,CAAC;;EAEF;EACA,MAAMG,WAAW,GAAGL,KAAK,KAAK,QAAQ,GACjCM,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,GAAG,MAAM,GAAG,OAAO,GAC7ER,KAAK;;EAET;EACAV,SAAS,CAAC,MAAM;IACdmB,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEN,WAAW,CAAC;IAChEF,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,EAAEK,WAAW,CAAC,CAAC;;EAExB;EACAf,SAAS,CAAC,MAAM;IACd,IAAIU,KAAK,KAAK,QAAQ,EAAE;IAExB,MAAMa,UAAU,GAAGP,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC;IACpE,MAAMO,YAAY,GAAGA,CAAA,KAAM;MACzBL,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAChDE,UAAU,CAACL,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;IAC1C,CAAC;IAEDK,UAAU,CAACE,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;IACnD,OAAO,MAAMD,UAAU,CAACG,mBAAmB,CAAC,QAAQ,EAAEF,YAAY,CAAC;EACrE,CAAC,EAAE,CAACd,KAAK,CAAC,CAAC;EAEX,oBACEP,OAAA,CAACC,YAAY,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAElB,KAAK;MAAEC,QAAQ;MAAEI;IAAY,CAAE;IAAAP,QAAA,EAC5DA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACvB,GAAA,CApCWF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}